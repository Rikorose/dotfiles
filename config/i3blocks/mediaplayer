#!/bin/bash

timeout=${timeout:-5}
timeout_start=${timeout_start:-5}

if [ "$instance" ]; then
  PLAYERARG="-p $instance"
else
  PLAYERARG="-a"
fi

process_input() {
  while read BLOCK_BUTTON; do
    case $BLOCK_BUTTON in
      1) playerctl $PLAYERARG next ;;
      2) playerctl $PLAYERARG play-pause ;;
      3) playerctl $PLAYERARG previous ;;
      4) playerctl $PLAYERARG position 5+ ;;
      5) playerctl $PLAYERARG position 5- ;;
    esac
  done
}

$(process_input <&0) &
proc_input=$!

process_meta() {
  # Check if has artist
  if [[ -z "$(playerctl $PLAYERARG metadata artist)" ]]; then
    playerctl -F $PLAYERARG metadata title # Only print title
  else
    playerctl -F $PLAYERARG metadata --format "{{ artist }} - {{ title }}"
  fi
}

EXIT=0
cleanup() {
  kill -TERM $proc_input 2>/dev/null
  kill -TERM $proc_meta 2>/dev/null
  sleep 1
  EXIT=1
}
trap cleanup SIGINT SIGTERM

while [[ $EXIT -eq 0 ]]; do
  # Clear block
  echo ""

  # Wait for status = "Playing"
  { while read -r line; do [[ "$line" = "Playing" ]] && break; done; kill "$!"; } < <(exec playerctl -F $PLAYERARG status)
  process_meta &
  proc_meta=$!

  # On status change, wait for the specified timeout and clear input
  { while read -r line; do [[ "$line" != "Playing" ]] && break; done; kill "$!"; } < <(exec playerctl -F $PLAYERARG status)
  sleep $timeout
  kill -Term $proc_meta 2>/dev/null
done
