#!/bin/bash

set -e

# default timeout is 5 minutes
CIPRUN_TIMEOUT=${CIPRUN_TIMEOUT:-23h}
CIPRUN_USER=${CIPRUN_USER:-1}
CIPRUN_GPU=${CIPRUN_GPU:-0}
CIPRUN_NICE=${CIPRUN_NICE:-19}

renice -n "$CIPRUN_NICE" $$

# Execute program in background and get its pid
( timeout --preserve-status -s SIGUSR1 -k 10 "$CIPRUN_TIMEOUT" $@ ) & pid_p=$!
echo "started ciprun process with pid $pid_p"

# Forward SIGINT
sigint_program () {
  kill -s SIGINT $pid_p 2>/dev/null
  kill $pid_w 2>/dev/null
  sleep 10s
  kill $pid_p 2>/dev/null
  exit
}
trap sigint_program INT

cleanup () {
  kill $pid_p 2>/dev/null
  exit
}

other_user_logind () {
  if [[ -x $(command -v cip-logind-active-user) ]]; then
    cip-logind-active-user
  else
    OTHER_USERS=$(who | cut -d " " -f1 | sort | uniq | rg -v $USER)
    if [[ -n "$OTHER_USERS" ]]; then
      echo "$OTHER_USERS"
    fi
  fi
}

# Check for user that are logged in and not idle
while user=$(other_user_logind); do
  if [ -n "$user" ] && [ "$CIPRUN_USER" -eq 1 ]; then
    echo "User $user logged in at $(date), killing process with pid_p $pid_p"
    cleanup
  fi
  # Check if there is enough free GPU memory for a new user to login
  if [ "$CIPRUN_GPU" -eq 1 ] && [ -x "$(command -v nvidia-smi)" ] &&
     [ $(nvidia-smi --query-gpu=memory.free --format=csv,noheader,nounits) -lt 32 ];
  then
    echo "Not enough GPU memory available"
    cleanup
  fi
  # Check if there is enough RAM eavailable for a new user to login
  # if [ $(free | awk '/Mem/{printf("%.0f\n"), $3/$2*100}') -gt 98 ];
  # then
  #   echo "Not enough RAM available"
  #   cleanup
  # fi
  # Check if process still exist and was not killed due to timeout or SIGINT
  ps -p $pid_p >/dev/null 2>&1; killed=$?
  if [ $killed -eq 1 ]; then
    exit
  fi
  sleep 1s
done
